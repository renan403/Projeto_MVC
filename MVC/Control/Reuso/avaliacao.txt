
------------------------------------------------------ Avalição por estrela ----------------------------------------------------------

<a href="javascript:void(0)" onclick="Avaliar(1)">
<img src="~/icones/star.png" id="s1"></a>

<a href="javascript:void(0)" onclick="Avaliar(2)">
<img src="~/icones/star.png"  id="s2"></a>

<a href="javascript:void(0)" onclick="Avaliar(3)">
<img src="~/icones/star.png"  id="s3"></a>

<a href="javascript:void(0)" onclick="Avaliar(4)">
<img src="~/icones/star.png"  id="s4"></a>

<a href="javascript:void(0)" onclick="Avaliar(5)">
<img src="~/icones/star.png"  id="s5"></a>
<p id="rating">0</p>

-----------------------------------------------------------------------------------------------------------------------------------------
 static private string EnCode(string code)
        {
            byte[] byteAs = Encoding.UTF8.GetBytes(code);
            string codificado = Convert.ToBase64String(byteAs);
            return codificado;
        }
        static private string DeCode(string code)
        {
            byte[] byteAs = Convert.FromBase64String(code);
            var decodificar = Encoding.UTF8.GetString(byteAs);
            return decodificar;
        }

        static public string Encriptar(string txt, string chave)
        {
            var codifica = EnCode(txt);
            var codificaChave = string.Concat(codifica, "489ds9ç84yu9hçd9çf", chave);
            var segCodificacao = EnCode(codificaChave);
            return EnCode(segCodificacao);
        }
        static public string Decriptar(string txt, string chave)
        {
            try
            {
                var decodificar = DeCode(txt);
                var decodificar2x = DeCode(decodificar);
                int count = 2;
                string[] separador = { "489ds9ç84yu9hçd9çf" };
                var separador2x = decodificar2x.Split(separador, count, StringSplitOptions.None);
                if (separador2x[1].ToString() == chave)
                {
                    return DeCode(separador2x[0].ToString());
                }

            }
            catch (Exception)
            {

                return string.Empty;
            }

            return string.Empty;


        }
--------------------------------------------------------------------------------------------------------------------------------
using (Aes myAes = Aes.Create())
            {
                byte[] chave = Encoding.UTF8.GetBytes("tedfsdfdfspfddsfdstfdswertyuiopj");

                // Encrypt the string to an array of bytes.
                byte[] encriptado = EncryptStringToBytes_Aes(original, chave, myAes.IV);

                // Decrypt the bytes to a string.
                string Decriptado = DecryptStringFromBytes_Aes(encriptado, chave, myAes.IV);

                //Display the original data and the decrypted data.
                Console.WriteLine("Original:   {0}", original);
                Console.WriteLine("Decriptado: {0}", Decriptado);
            }